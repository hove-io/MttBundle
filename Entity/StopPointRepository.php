<?php

namespace CanalTP\MttBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StopPointRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StopPointRepository extends EntityRepository
{
    public function getBlocks($stopPoint, $stopTimetable)
    {
        $result = $this->getEntityManager()->getRepository('CanalTPMttBundle:Block')->findBy(
            array(
                'stopPoint' => $stopPoint->getId(),
                'stopTimetable' => $stopTimetable->getId()
            )
        );

        return $result;
    }

    public function updatePdfGenerationInfos($externalStopPointId, $stopTimetable, $hash)
    {
        $stopPoint = $this->getStopPoint($externalStopPointId, $stopTimetable);

        $stopPoint->setPdfGenerationDate(new \DateTime());
        $stopPoint->setPdfHash($hash);
        $this->getEntityManager()->flush($stopPoint);
    }

    public function getStopPoint($externalStopPointId, $stopTimetable)
    {
        $stopPoint = $this->findOneBy(
            array(
                'externalId' => $externalStopPointId,
                'stopTimetable' => $stopTimetable->getId(),
            )
        );

        // do this stop_point exists?
        if (empty($stopPoint)) {
            $stopPoint = $this->insertStopPoint(
                $externalStopPointId,
                $stopTimetable
            );
        }

        return $stopPoint;
    }

    private function insertStopPoint($externalStopPointId, $stopTimetable)
    {
        $stopPoint = new StopPoint();
        $stopPoint->setExternalId($externalStopPointId);
        $stopPoint->setStopTimetable($stopTimetable);
        $this->getEntityManager()->persist($stopPoint);

        return $stopPoint;
    }

    private function isUpToDate($pdfGenerationDate, $blocks)
    {
        foreach ($blocks as $block) {
            if ($block->getUpdated() != null && $block->getUpdated() > $pdfGenerationDate) {
                return (false);
            }
        }

        return (true);
    }

    public function hasPdfUpToDate($stopPoint, $stopTimetable)
    {
        $stopTimetableRepo = $this->getEntityManager()->getRepository('CanalTPMttBundle:StopTimetable');

        // no stop point
        // no pdf generated yet => return FALSE
        return (!$stopPoint->getPdfGenerationDate() == null ||
            // stopTimetable was modified after pdf generation
            ($this->isUpToDate(
                $stopPoint->getPdfGenerationDate(),
                $stopTimetableRepo->findBlocksByStopTimetableIdOnly($stopTimetable->getId())
            ) &&
            $this->isUpToDate($stopPoint->getPdfGenerationDate(), $stopPoint->getBlocks()))
        );
    }
}
