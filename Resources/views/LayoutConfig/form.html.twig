{% extends "::modal.html.twig" %}

{% form_theme form 'CanalTPMttBundle:Form:fields.html.twig' %}

{% block open_form %}
    {{ form_start(form) }}
{% endblock %}

{% block modal_title %}
    {{'layout_config.create'|trans({}, 'default')}}
{% endblock %}


{% block modal_body %}
    {{ form_errors(form) }}

    <div class="row">
        <div class="col-lg-12">
            {{ form_row(form.label) }}
        </div>
        <div class="col-lg-6">
            {{ form_row(form.calendarStart) }}
        </div>
        <div class="col-lg-6">
            {{ form_row(form.calendarEnd) }}
        </div>
        <div class="col-lg-4">
            {{ form_row(form.horizontalMerge) }}
        </div>
        <div class="col-lg-4">
            {{ form_row(form.verticalMerge) }}
        </div>
        <div class="col-lg-4">
            {{ form_row(form.verticalMergeOffset) }}
        </div>
        <div class="col-lg-12">
            {{ form_row(form.notesType) }}
        </div>

        <div class="col-lg-12" id ="notes-color" data-prototype="{{ form_widget(form.notesColors.vars.prototype)|e }}">
            {{ form_label(form.notesColors) }}
        </div>
        {% for notesColor in form.notesColors %}
            <div class="col-lg-6">
                <div class="form-group">
                    {{ form_errors(notesColor) }}
                    {{ form_widget(notesColor) }}
                </div>
            </div>
        {% endfor %}

        <div class="col-lg-12">
            {{ form_row(form.file) }}
        </div>
        <div class="col-lg-12">
            {{ form_row(form.layout) }}
        </div>
    </div>
{% endblock %}

{% block modal_actions %}
    <button type="submit" class="btn btn-success">
        <span class="glyphicon glyphicon-pencil"></span> {{'global.save'|trans}}
    </button>
    {{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        require(['mtt/form/chooseLayout']);

        require(['jquery'], function($) {
            $('.notes-color').each(function() {
                $(this).css('color', $(this).val());

                $(this).focusout(function() {
                   $(this).css('color', $(this).val());
                });
            });

            if ($('#layout_config_notesType').val() == '{{ constant('CanalTP\\MttBundle\\Entity\\LayoutConfig::NOTES_TYPE_EXPONENT') }}') {
                $('.notes-color').parent().parent().hide();
                $('#notes-color').hide();
            } else if ($('#layout_config_notesType').val() == '{{ constant('CanalTP\\MttBundle\\Entity\\LayoutConfig::NOTES_TYPE_COLOR') }}') {
                $('.notes-color').parent().parent().show();
                $('#notes-color').show();
            }

            $('#layout_config_notesType').change(function() {
                if ($(this).val() == '{{ constant('CanalTP\\MttBundle\\Entity\\LayoutConfig::NOTES_TYPE_EXPONENT') }}') {
                    $('.notes-color').parent().parent().hide();
                    $('#notes-color').hide();
                } else if ($(this).val() == '{{ constant('CanalTP\\MttBundle\\Entity\\LayoutConfig::NOTES_TYPE_COLOR') }}') {
                    $('.notes-color').parent().parent().show();
                    $('#notes-color').show();
                }
            });
        });
    </script>
{% endblock %}
